# -*- coding: utf-8 -*-
"""차선인식프로그램(+영상처리)ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rB6psUkfPrN4uzxPWuMOGyALcVXMA0EU

#모듈
"""

import cv2
import os
import numpy as np
import time
from matplotlib import image as img
import matplotlib.pyplot as plt
from google.colab import files
from google.colab.patches import cv2_imshow

"""#Open CV 설치"""

pip install opencv-python

videos = files.upload()

#업로드된 파일 목록 출력
for filename in videos.keys():
  print(f'Uploaded file:{filename}')

"""# 프레임 추출 및 변환"""

cap = cv2.VideoCapture('test14.mp4') # 동영상 캡쳐 객체 생성

if cap.isOpened():                 # 캡쳐 객체 초기화 확인
    while True:
      ret, image = cap.read()      # 다음 프레임 읽기

      if ret:                     # 프레임 읽기 정상
            image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

            # 임계값 설정
            threshold_value = 250

            image_binary = image_gray.copy()  # 이진화된 이미지를 저장할 복사본 생성

            #height, width = 740, 1113
            height, width = 480, 852

            # 이미지의 각 픽셀을 순회하며 이진화
            for y in range(height):
              for x in range(width):
                if image_gray[y, x] > threshold_value:
                  image_gray[y, x] = 255  # 흰색
                else:
                  image_gray[y, x] = 0  # 검은색


            # 블러 및 캐니 에지 검출
            image_blur = cv2.GaussianBlur(image_gray, (5, 5), 0)

            image_canny = cv2.Canny(image_blur, 100, 200)


            # 허프 변환을 사용하여 직선 검출
            lines = cv2.HoughLinesP(image_canny, 1, np.pi / 180, threshold=100, minLineLength=100, maxLineGap=20)

            image_line = image.copy()

# 검출된 직선을 원본 이미지에 그리기
            if lines is not None:
              for line in lines:
                x1, y1, x2, y2 = line[0]
                cv2.line(image_line, (x1, y1),  (x2, y2), (0, 0, 255), 2)

            cv2_imshow(image_line) # 화면에 표시

            cv2.waitKey(2)         # 5ms 지연

      else:
            break


else:
  print("can't open video.")



cap.release()
cv2.destroyAllWindows()